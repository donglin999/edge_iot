name: 单元测试

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
    
    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 运行单元测试
      run: |
        cd project-data-acquisition_backend
        python -m pytest tests/ -v --cov=apps --cov-report=xml
    
    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v3
      with:
        file: ./project-data-acquisition_backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: 上传覆盖率报告到GitHub
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: ./project-data-acquisition_backend/htmlcov/

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    
    - name: 安装代码检查工具
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: 运行代码格式检查
      run: |
        cd project-data-acquisition_backend
        # 检查代码格式
        black --check --diff .
        # 检查import排序
        isort --check-only --diff .
        # 检查代码规范
        flake8 . 